name: Deploy to Amazon ECS (Public ECR)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: üì¶ Checkout code
      uses: actions/checkout@v4

    - name: üîê Configure AWS credentials for Public ECR
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
        aws-region: us-east-1

    - name: üîë Log in to Public ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/q5j9i0p7

    - name: üõ†Ô∏è Build and Push Docker Image
      id: build-image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        IMAGE_URI=public.ecr.aws/q5j9i0p7/artefacts/artefacts:latest
        docker build -t $IMAGE_URI \
          -f ./dockerfiles/Dockerfile \
          --build-arg NEXT_PUBLIC_API_URL=${{ vars.API_URL }} \
          --build-arg NEXT_PUBLIC_USER_POOL_ID=${{ vars.NEXT_PUBLIC_USER_POOL_ID }} \
          --build-arg NEXT_PUBLIC_USER_POOL_CLIENT_ID=${{ secrets.NEXT_PUBLIC_USER_POOL_CLIENT_ID }} \
          --build-arg NEXT_PUBLIC_AWS_COGNITO_REGION=${{ vars.NEXT_PUBLIC_AWS_COGNITO_REGION }} \
          --build-arg NEXT_PUBLIC_DOMAIN=${{ vars.NEXT_PUBLIC_DOMAIN }} \
          --build-arg NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ vars.NEXT_PUBLIC_GOOGLE_CLIENT_ID }} \
          .
        docker push $IMAGE_URI
        echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT

    - name: üîê Reconfigure AWS credentials for ECS (af-south-1)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: üß© Fill in image URI in task definition
      id: render-task
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ vars.ECS_TASK_DEFINITION }}
        container-name: ${{ vars.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: üöÄ Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-task.outputs.task-definition }}
        service: ${{ vars.ECS_SERVICE }}
        cluster: ${{ vars.ECS_CLUSTER }}
        wait-for-service-stability: true
        overrides: |
          containerOverrides:
            - name: ${{ vars.CONTAINER_NAME }}
              environment:
                - name: API_KEY
                  value: ${{ secrets.API_KEY }}
                - name: CLIENT_SECRET
                  value: ${{ secrets.NEXT_PUBLIC_CLIENT_SECRET }}
                - name: AWS_ACCESS_KEY_ID
                  value: ${{ secrets.AWS_ACCESS_KEY_ID }}
                - name: AWS_SECRET_ACCESS_KEY
                  value: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
